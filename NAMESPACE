exportPattern("^[[:alpha:]]+")

export(
  "%<<%","%<<%.Scene","%<<%.Chainable.Scene",
  "[[","[[.Scene",
  "[[<-","[[<-.Scene",
  "[","[.Scene",
  "[<-","[<-.Scene",
  "[.TermType",

  "%contains%","%contains%.Domain",

  "%when%","%when%.Vertex2d","%when%.Vertex3d","%when%.Segment2d","%when%.Segment3d","%when%.Facet3d",

  .TermTypesInit,
  InteractionMngr,
  ComponentFunctionalFormulaManager
)

S3method("[","Scene") 
S3method("[[","Scene") 
S3method("[[<-","Scene") 
S3method("[<-","Scene") 
S3method("%<<%","Scene") 
S3method("elements","Scene") 
S3method("length","Scene") 
S3method("plot","Scene") 
S3method("print","Scene") 

S3method("[",TermType)

S3method("delete","Delaunay") 
S3method("edges","Delaunay") 
S3method("facets","Delaunay") 
S3method("insert","Delaunay") 
S3method("length","Delaunay") 
S3method("lines","Delaunay") 
S3method("plot","Delaunay") 
S3method("points","Delaunay") 
S3method("print","Delaunay") 
S3method("seq","Delaunay") 
S3method("vertices","Delaunay") 
S3method("window","Delaunay")

S3method("insert","Regular") 
S3method("vertices","Regular") 

S3method("run","SimGibbs") 
S3method("update","SimGibbs") 

S3method("%contains%","Domain") 
S3method("dim","Domain") 
S3method("length","Domain") 
S3method("run","Domain") 
S3method("window","Domain") 

S3method("formula","Resid") 
S3method("run","Resid") 

S3method("area","Delaunay_2d") 
S3method("volume","Delaunay_2d") 
S3method("volume","Delaunay_3d") 

import( Rcpp )

useDynLib(EBSpatCGAL)

# for( m in sapply(methods(class=Scene), function(e) paste0("S3method(\"",paste(strsplit(e, "\\.")[[1]],collapse="\",\""), "\")"))) cat(m,"\n")
